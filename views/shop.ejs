<%- include('./partials/header') %>

<% if(success.length>0){ %>
    <div class="fixed top-5 left-1/2 transform -translate-x-1/2 z-50 p-4 rounded-lg bg-green-500 shadow-lg">
        <span class="inline-block text-white font-medium">
            <%= success %>
        </span>
    </div>
<% } %>

<div class="w-full min-h-screen bg-gray-50 flex items-start px-6 lg:px-20 py-10">
    <!-- Sidebar -->
    <div class="w-full lg:w-1/4 bg-white rounded-xl shadow-md p-6 mr-6 sticky top-10 max-h-screen overflow-y-auto">
        <!-- Sort Section -->
        <div class="mb-8">
            <div class="flex items-center gap-3 mb-4">
                <i class="ri-sort-asc text-xl text-gray-600"></i>
                <h3 class="text-lg font-semibold text-gray-800">Sort By</h3>
            </div>
            <form action="/shop" method="GET">
                <select class="w-full border border-gray-300 rounded-lg px-3 py-2 bg-white focus:ring-2 focus:ring-blue-500 focus:border-transparent" name="sortby" onchange="this.form.submit()">
                    <option value="popular">Popular</option>
                    <option value="newest">Newest</option>
                    <option value="price-low">Price: Low to High</option>
                    <option value="price-high">Price: High to Low</option>
                    <option value="name">Name (A-Z)</option>
                </select>
            </form>
        </div>

        <!-- Categories Section -->
        <div class="mb-8">
            <div class="flex items-center gap-3 mb-4">
                <i class="ri-folder-line text-xl text-gray-600"></i>
                <h3 class="text-lg font-semibold text-gray-800">Categories</h3>
            </div>
            <div class="space-y-2">
                <a class="block w-full text-left px-3 py-2 rounded-lg hover:bg-blue-50 hover:text-blue-600 transition-colors cursor-pointer filter-option" data-filter="all">
                    <i class="ri-grid-line mr-2"></i>All Products
                </a>
                <a class="block w-full text-left px-3 py-2 rounded-lg hover:bg-blue-50 hover:text-blue-600 transition-colors cursor-pointer filter-option" data-filter="new">
                    <i class="ri-star-line mr-2"></i>New Collection
                </a>
                <a class="block w-full text-left px-3 py-2 rounded-lg hover:bg-blue-50 hover:text-blue-600 transition-colors cursor-pointer filter-option" data-filter="discounted">
                    <i class="ri-price-tag-3-line mr-2"></i>Discounted Products
                </a>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="mb-6">
            <div class="flex items-center gap-3 mb-4">
                <i class="ri-filter-line text-xl text-gray-600"></i>
                <h3 class="text-lg font-semibold text-gray-800">Filters</h3>
            </div>
            
            <!-- Price Range Filter -->
            <div class="mb-6">
                <label class="block text-sm font-medium text-gray-700 mb-2">Price Range</label>
                <div class="flex items-center gap-2">
                    <input type="number" id="min-price" placeholder="Min" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm">
                    <span class="text-gray-500">-</span>
                    <input type="number" id="max-price" placeholder="Max" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm">
                </div>
                <button onclick="applyPriceFilter()" class="w-full mt-2 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors text-sm">Apply</button>
            </div>

            <!-- Availability Filter -->
            <div class="mb-4">
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" id="in-stock" class="mr-2 text-blue-600 focus:ring-blue-500">
                    <span class="text-gray-700">In Stock Only</span>
                </label>
            </div>

            <!-- Discount Filter -->
            <div class="mb-4">
                <label class="flex items-center cursor-pointer">
                    <input type="checkbox" id="on-sale" class="mr-2 text-blue-600 focus:ring-blue-500">
                    <span class="text-gray-700">On Sale</span>
                </label>
            </div>

            <!-- Clear Filters -->
            <button onclick="clearAllFilters()" class="w-full bg-gray-600 text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition-colors text-sm">
                Clear All Filters
            </button>
        </div>
    </div>

    <!-- Products Section -->
    <div class="w-full lg:w-3/4">
        <!-- Products Header -->
        <div class="bg-white rounded-xl shadow-md p-6 mb-6">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-bold text-gray-900">Products</h2>
                <div class="flex items-center gap-4">
                    <span id="product-count" class="text-gray-600">Showing all products</span>
                    <div class="flex gap-2">
                        <button onclick="toggleView('grid')" id="grid-btn" class="p-2 rounded-lg bg-blue-600 text-white">
                            <i class="ri-grid-line"></i>
                        </button>
                        <button onclick="toggleView('list')" id="list-btn" class="p-2 rounded-lg bg-gray-200 text-gray-600">
                            <i class="ri-list-check"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div id="products-container" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            <% products.forEach(function(product){ %>
                <div class="product-card bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300" 
                     data-price="<%= product.price %>" 
                     data-name="<%= product.name.toLowerCase() %>"
                     data-discount="<%= product.discount || 0 %>">
                    <div class="relative">
                        <div class="w-full h-64 flex items-center justify-center bg-[<%= product.bgcolor %>] p-4">
                            <img class="h-48 w-auto object-contain transition-transform duration-300 hover:scale-105"
                                src="data:image/jpeg;base64,<%= product.image.toString('base64') %>" 
                                alt="<%= product.name %>">
                        </div>
                        <% if(product.discount && product.discount > 0) { %>
                            <div class="absolute top-3 left-3 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full">
                                <%= Math.round((product.discount / product.price) * 100) %>% OFF
                            </div>
                        <% } %>
                    </div>
                    <div class="bg-[<%= product.panelcolor %>] px-4 py-4 text-[<%= product.textcolor %>]">
                        <div class="flex justify-between items-center">
                            <div class="flex-1">
                                <h3 class="font-semibold text-lg mb-1 truncate">
                                    <%= product.name %>
                                </h3>
                                <div class="flex items-center gap-2">
                                    <span class="text-lg font-bold">₹ <%= product.price %></span>
                                    <% if(product.discount && product.discount > 0) { %>
                                        <span class="text-sm line-through opacity-60">₹ <%= product.price + product.discount %></span>
                                    <% } %>
                                </div>
                            </div>
                            <a class="w-10 h-10 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 transition-colors shadow-md"
                                href="/addtocart/<%= product._id %>">
                                <i class="ri-shopping-cart-line text-gray-700"></i>
                            </a>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>

        <!-- No Products Message -->
        <div id="no-products" class="hidden text-center py-16">
            <i class="ri-shopping-bag-line text-6xl text-gray-300 mb-4"></i>
            <h3 class="text-xl font-semibold text-gray-600 mb-2">No products found</h3>
            <p class="text-gray-500">Try adjusting your filters or search criteria</p>
        </div>
    </div>
</div>

<script>
let allProducts = [];
let currentView = 'grid';

// Initialize products array on page load
document.addEventListener('DOMContentLoaded', function() {
    const productCards = document.querySelectorAll('.product-card');
    allProducts = Array.from(productCards);
    updateProductCount();
});

// Filter functions
function applyFilters() {
    const minPrice = parseFloat(document.getElementById('min-price').value) || 0;
    const maxPrice = parseFloat(document.getElementById('max-price').value) || Infinity;
    const inStockOnly = document.getElementById('in-stock').checked;
    const onSaleOnly = document.getElementById('on-sale').checked;
    
    const filteredProducts = allProducts.filter(product => {
        const price = parseFloat(product.dataset.price);
        const discount = parseFloat(product.dataset.discount);
        
        // Price filter
        if (price < minPrice || price > maxPrice) return false;
        
        // Sale filter
        if (onSaleOnly && discount <= 0) return false;
        
        return true;
    });
    
    showFilteredProducts(filteredProducts);
}

function applyPriceFilter() {
    applyFilters();
}

// Category filter
document.querySelectorAll('.filter-option').forEach(option => {
    option.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Remove active class from all options
        document.querySelectorAll('.filter-option').forEach(opt => {
            opt.classList.remove('bg-blue-50', 'text-blue-600');
        });
        
        // Add active class to clicked option
        this.classList.add('bg-blue-50', 'text-blue-600');
        
        const filter = this.dataset.filter;
        let filteredProducts = [];
        
        switch(filter) {
            case 'all':
                filteredProducts = allProducts;
                break;
            case 'new':
                // Assuming newer products have higher IDs or you can add a date field
                filteredProducts = allProducts.slice().sort((a, b) => b.dataset.name.localeCompare(a.dataset.name)).slice(0, Math.ceil(allProducts.length / 2));
                break;
            case 'discounted':
                filteredProducts = allProducts.filter(product => parseFloat(product.dataset.discount) > 0);
                break;
        }
        
        showFilteredProducts(filteredProducts);
    });
});

// Show filtered products
function showFilteredProducts(products) {
    const container = document.getElementById('products-container');
    const noProducts = document.getElementById('no-products');
    
    // Hide all products first
    allProducts.forEach(product => product.style.display = 'none');
    
    if (products.length === 0) {
        noProducts.classList.remove('hidden');
    } else {
        noProducts.classList.add('hidden');
        products.forEach(product => product.style.display = 'block');
    }
    
    updateProductCount(products.length);
}

// Update product count
function updateProductCount(count = null) {
    const counter = document.getElementById('product-count');
    const total = count !== null ? count : allProducts.length;
    counter.textContent = `Showing ${total} product${total !== 1 ? 's' : ''}`;
}

// Clear all filters
function clearAllFilters() {
    document.getElementById('min-price').value = '';
    document.getElementById('max-price').value = '';
    document.getElementById('in-stock').checked = false;
    document.getElementById('on-sale').checked = false;
    
    // Reset category filter
    document.querySelectorAll('.filter-option').forEach(opt => {
        opt.classList.remove('bg-blue-50', 'text-blue-600');
    });
    document.querySelector('[data-filter="all"]').classList.add('bg-blue-50', 'text-blue-600');
    
    showFilteredProducts(allProducts);
}

// View toggle
function toggleView(view) {
    currentView = view;
    const container = document.getElementById('products-container');
    const gridBtn = document.getElementById('grid-btn');
    const listBtn = document.getElementById('list-btn');
    
    if (view === 'grid') {
        container.className = 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6';
        gridBtn.className = 'p-2 rounded-lg bg-blue-600 text-white';
        listBtn.className = 'p-2 rounded-lg bg-gray-200 text-gray-600';
    } else {
        container.className = 'grid grid-cols-1 gap-4';
        gridBtn.className = 'p-2 rounded-lg bg-gray-200 text-gray-600';
        listBtn.className = 'p-2 rounded-lg bg-blue-600 text-white';
    }
}

// Apply filters on checkbox change
document.getElementById('in-stock').addEventListener('change', applyFilters);
document.getElementById('on-sale').addEventListener('change', applyFilters);

// Set default active filter
document.addEventListener('DOMContentLoaded', function() {
    document.querySelector('[data-filter="all"]').classList.add('bg-blue-50', 'text-blue-600');
});
</script>

<%- include('./partials/footer') %>